using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _1
{
    class Program
    {
        static void Main(string[] args)
        {
            int n, i, j, temp, b;
            Console.Write("Введите размерность массива: ");
            n = Convert.ToInt32(Console.ReadLine());
            int[] f = new int[n];
            Console.WriteLine();
            Console.WriteLine("Введите элементы массива:");
            for (i = 0; i < n; i++)
            {
                Console.Write($"{i} элемент: ");
                f[i] = Convert.ToInt32(Console.ReadLine());
            }
//обменом
            for (i = 0; i < n; i++)
            {
                for (j = i + 1; j < n; j++)
                {
                    if (f[i] > f[j])
                    {
                        temp = f[i];
                        f[i] = f[j];
                        f[j] = temp;
                    }
                }
            }

//вставкой
int cur;   // текущий элемент массива
 int j;      // текущий индекс
 for (int i = 1; i < array.Length; i++)
    {
        cur = array[i];
        j = i;
        while ((j > 0) && (cur < array[j - 1]))
        {
            array[j] = array[j - 1];
            j--;
        }
        array[j] = cur;
    }

//выбором
int indx; //переменная для хранения индекса минимального элемента массива
for (int i = 0; i < intArray.Length; i++) //проходим по массиву с начала и до конца
{
    indx = i; //считаем, что минимальный элемент имеет текущий индекс 
    for (int j = i; j < intArray.Length; j++)        //ищем минимальный элемент
 {
        if (intArray[j] < intArray[indx])  
        {
            indx = j;             //нашли в массиве число меньше, чем intArray[indx] 
           }
    }
     if (intArray[indx] == intArray[i]) //если минимальный элемент равен текущему значению - ничего не меняем
        continue;
    //меняем местами минимальный элемент и первый в неотсортированной части
    int temp = intArray[i];    //временная переменная
    intArray[i] = intArray[indx];
    intArray[indx] = temp;
}

            Console.WriteLine();
            Console.WriteLine("- Отсортированный массив -");
            for (i = 0; i < n; i++)
            {
                Console.WriteLine($"{i} элемент - {f[i]}");
            }
            Console.WriteLine();
            Console.Write("Введите элемент, позицию которого надо найти: ");
            b = Convert.ToInt32(Console.ReadLine());
            int L = 0;
            int R = n - 1;
            int k = (R + L) / 2;
            int F = 0;
            while (L <= R)
            {
                k = (R + L) / 2;
                if (f[k] == b)
                {
                    Console.WriteLine($"Элемент найден на позиции - {k}");
                    F = 1;
                    break;
                }
                else
                if (f[k] < b)
                    L = k + 1;
                else
                    R = k - 1;
            }
            if (F == 0)
            {
                Console.WriteLine("Элемент не найден");
            }
            Console.WriteLine();
            Console.WriteLine("Нажмите Enter для выхода из программы");
            Console.ReadLine();
        }
    }
}
